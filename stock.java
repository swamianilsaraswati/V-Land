/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sample_shop;
import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static sample_shop.home1.sno;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
/**
 *
 * @author Shivi
 */
public class stock extends javax.swing.JFrame {

    /**
     * Creates new form stock
     */
    
    static int sno=1;
    int barcode;
    public stock() {
        initComponents();
        show_stock();
        date();
    }
public void removeTable(){
DefaultTableModel dm = (DefaultTableModel)stock_enter.getModel();
dm.getDataVector().removeAllElements();
dm.fireTableDataChanged(); 
}
    public void date(){
/*thhis function is displaying the current date and display in the pdate field */

 LocalDate localdate=LocalDate.now();
        DateTimeFormatter f=DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String fs=localdate.format(f);
     sdate.setText(fs);
} 
    
   public ArrayList<stock_entry>stockList(){
    ArrayList<stock_entry>stockList=new ArrayList<>();
     
    try {
		Class.forName("com.mysql.jdbc.Driver");
		Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/project?autoReconnect=true&useSSL=false", "root", "root");
		System.out.println("connection Connected");
                String query1="SELECT *from stock_detail";
                Statement st=conn.createStatement();
                 ResultSet rs=st.executeQuery(query1);
                 stock_entry user;
                 while(rs.next()){
                     String d;
                     SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                     d=sdf.format(rs.getDate("exp_date"));
                    user=new stock_entry(rs.getString("pname"),rs.getInt("uprice"),rs.getInt("quantity"),d,rs.getInt("total"));
                   //System.out.println(rs.getDate(query1));
                    stockList.add(user);
                         }
	conn.close();
	}catch(SQLException e){
             e.printStackTrace();
         }catch(Exception e1){
            System.out.println("error");
             e1.printStackTrace();
          }
    return stockList;
    
     }
public void show_stock(){


/*this fuction is displaying the values of database from the table and display in the table*/
ArrayList<stock_entry> list =stockList();
DefaultTableModel model=(DefaultTableModel)stock_show.getModel();
Object[] row =new Object[6];
        int i;
for(i=0;i<list.size();i++){
    row[0]=sno++;
    row[1]=list.get(i).getpname();
    row[2]=list.get(i).getquantity();
    row[3]=list.get(i).getuprice();
    row[4]=list.get(i).getdate();
    row[5]=list.get(i).gettotal_amount();
    model.addRow(row);
}
}
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invoice = new javax.swing.JButton();
        stock = new javax.swing.JButton();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        stock_show = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        stock_enter = new javax.swing.JTable();
        pname = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        uprice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        add_stock = new javax.swing.JButton();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        e_date = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        sdate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        shortage = new javax.swing.JButton();
        expiry = new javax.swing.JButton();
        monthly = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoice.setText("Invoice");
        invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceActionPerformed(evt);
            }
        });

        stock.setText("Stock");
        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });

        jInternalFrame3.setVisible(true);

        stock_show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Description", "Quantity", "Unit price", "Expiry Date", "Total amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(stock_show);

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delete, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(edit)
                        .addGap(18, 18, 18)
                        .addComponent(delete)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel1.setText("STOCK  ENTRY");

        stock_enter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Product Name", "Quantity", "Unit Price", "Expiry Date", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(stock_enter);

        jLabel2.setText("Product Name");

        jLabel3.setText("Quantity");

        jLabel4.setText("Unit Price");

        add_stock.setText("ADD STOCK");
        add_stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_stockActionPerformed(evt);
            }
        });

        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        remove.setText("REMOVE");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        jLabel8.setText("Expiry Date");

        e_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_dateActionPerformed(evt);
            }
        });

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(pname, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(uprice, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(e_date, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_stock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(add_stock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(remove)
                        .addGap(18, 18, 18)
                        .addComponent(update)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(uprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(e_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(add)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel5.setText("Date");

        jLabel6.setText("Supplier Name");

        jLabel7.setText("Mobile No.");

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addGap(39, 39, 39)
                .addComponent(sdate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(254, 254, 254))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        shortage.setText("Shortage");
        shortage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shortageActionPerformed(evt);
            }
        });

        expiry.setText("Expiry");
        expiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expiryActionPerformed(evt);
            }
        });

        monthly.setText("Report");
        monthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shortage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(invoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(expiry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monthly, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(invoice)
                .addGap(18, 18, 18)
                .addComponent(stock)
                .addGap(18, 18, 18)
                .addComponent(shortage)
                .addGap(18, 18, 18)
                .addComponent(expiry)
                .addGap(26, 26, 26)
                .addComponent(monthly)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(412, 412, 412))
        );

        jInternalFrame3.getContentPane().setBackground(new java.awt.Color(0,168,117));
        getContentPane().add(jInternalFrame3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void removeTable1(){
    DefaultTableModel dm = (DefaultTableModel)stock_enter.getModel();
    dm.getDataVector().removeAllElements();
    dm.fireTableDataChanged(); 
}
    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        
         try {
             
             TableModel model1=stock_show.getModel();
            int index[] = stock_show.getSelectedRows();
            Object[] row=new Object[6];
            DefaultTableModel model2=(DefaultTableModel)stock_enter.getModel();
            String s;
            
            int length=model2.getRowCount();
            if(length==1)
               {removeTable1();
               sname.setText("");
               }
            int i=0;
                    row[1]=model1.getValueAt(index[i], 1);
                    s=(String)row[1];
                    System.out.println(s);
                    row[2]=model1.getValueAt(index[i], 2); 
                    row[3]=model1.getValueAt(index[i], 3);
                    row[4]=model1.getValueAt(index[i], 4); 
                    row[5]=(int)row[2]*(int)row[3];
                    model2.addRow(row);   
              
		Class.forName("com.mysql.jdbc.Driver");
		Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/project?autoReconnect=true&useSSL=false", "root", "root");
		System.out.println("connection Connected");
               String query1="SELECT sname,sno from stock_detail where pname='"+s+"'";
                Statement st=conn.createStatement();
                 ResultSet rs=st.executeQuery(query1);
                 rs.next();
                String s_name=rs.getString("sname");
                barcode=rs.getInt("sno");
                sname.setText(s_name);
                 length=model2.getRowCount();
        int sno=1;
        for(int y=0 ;y<length;y++){
            model2.setValueAt(sno, y, 0); //setValueAt(data,row,column)
            sno++;
        }       
	conn.close();
	}catch(SQLException e){
             e.printStackTrace();
         }catch(Exception e1){
            System.out.println("error");
             e1.printStackTrace();
          }
    }//GEN-LAST:event_editActionPerformed

  
   
    private void add_stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_stockActionPerformed
        // TODO add your handling code here:
       try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/project?autoReconnect=true&useSSL=false", "root", "root");
            String query1="insert into stock_detail(pname,quantity,uprice,exp_date,total,sname,pdate) select pname,quantity,uprice,exp_date,total,sname,pdate from stock";
            Statement stmt=conn.createStatement();
            String sName=sname.getText();
            if(sName.equals(null) || sName.equals("")){
                JOptionPane.showMessageDialog(this, "Enter the Supplier Name");
                }
                else{
            PreparedStatement preparedStmt = conn.prepareStatement(query1);
                    preparedStmt.execute();
               TableModel model=stock_enter.getModel();
               //int index[] = stock_enter.getSelectedRows();
               Object[] row=new Object[6];
                DefaultTableModel model2=(DefaultTableModel)stock_show.getModel();
                DefaultTableModel model3=(DefaultTableModel)stock_enter.getModel();
                
                for(int i=0;i<model3.getRowCount();i++)
                 {
                     row[0]=sno++;
                    row[1]=model.getValueAt(i, 1);
                    row[2]=model.getValueAt(i, 2);  
                    row[3]=model.getValueAt(i, 3);
                    row[4]=model.getValueAt(i, 4);
                    row[5]=model.getValueAt(i, 5);
                 model2.addRow(row);
                // model3.removeRow(index[i]);
                //uncomment to remove all rows from stock_enter table. while adding to stock_show table and removing two rows giving error.
                }
                query1="delete from stock";
                PreparedStatement preparedStmt1 = conn.prepareStatement(query1);
                preparedStmt1.execute();
                removeTable();
                sname.setText("");
            model2.fireTableDataChanged();
            
            conn.close();}
        }catch(SQLException e){
            e.printStackTrace();
        }catch(Exception e1){
            System.out.println("error");
            e1.printStackTrace();
        }
        
    }//GEN-LAST:event_add_stockActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        if(quantity.getText().compareTo("")==0 || pname.getText().compareTo("")==0 ||
                sname.getText().compareTo("")==0 ||uprice.getText().compareTo("")==0 || e_date.getText().compareTo("")==0)
            JOptionPane.showMessageDialog(this, "All fields are compulsory");
        else{
        try {
		Class.forName("com.mysql.jdbc.Driver");
		Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/project?autoReconnect=true&useSSL=false", "root", "root");
		System.out.println("Connected connected");
                
                Statement st=conn.createStatement();
                String s1,s4,s6,s7;
                int s2,s3,s5;
                    s1=pname.getText();
                    s2=Integer.parseInt(quantity.getText());
                    //System.out.println(s2);
                    s3=Integer.parseInt(uprice.getText());
                    s4=e_date.getText();
                    s5=s2*s3;
                    s6=sname.getText();
                    s7=sdate.getText();
                    String query1="insert into stock(pname,quantity,uprice,exp_date,total,sname,pdate) values('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+s6+"','"+s7+"')";
                    PreparedStatement preparedStmt = conn.prepareStatement(query1);
                    preparedStmt.execute();
                    conn.close();
                    
                    
	}catch(SQLException e){
             e.printStackTrace();
         }catch(Exception e1){
            System.out.println("error");
             e1.printStackTrace();
          }
         DefaultTableModel model2=(DefaultTableModel)stock_enter.getModel();
         Object[] row=new Object[6];
            row[0]=sno;
            row[1]=pname.getText();
            row[2]=quantity.getText();
            row[3]=uprice.getText();
            int s=Integer.parseInt((String)row[2])*Integer.parseInt((String)row[3]);
            row[4]=e_date.getText();
            row[5]=s;
            model2.addRow(row);
     
       
       int length=model2.getRowCount();
        int sno=1;
        for(int y=0 ;y<length;y++){
            model2.setValueAt(sno, y, 0); //setValueAt(data,row,column)
            sno++;
        }
        pname.setText("");
        quantity.setText("");
        uprice.setText("");
        e_date.setText("");
            
        }
    }//GEN-LAST:event_addActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        
        int s_no=1;
        TableModel model1=stock_enter.getModel();
        int index[] = stock_enter.getSelectedRows();
        DefaultTableModel model=(DefaultTableModel)stock_enter.getModel();
        for(int i=0;i<index.length;i++){
            model.removeRow(index[i]);
        }
        int length=model.getRowCount();
        for(int y=0 ;y<length;y++){
            model.setValueAt(s_no, y, 0); //setValueAt(data,row,column)
            s_no++;
        }
        stock_enter.revalidate();
        stock_enter.repaint();
        
    }//GEN-LAST:event_removeActionPerformed

    private void invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceActionPerformed
        // TODO add your handling code here:
        home1 invoice=new home1();
        invoice.setVisible(true);
        this.dispose();
        /*shortage s_p=new shortage();
         s_p.dispose();
        expiry exp=new expiry();
        exp.setVisible(true);
        monthly_reports m_r=new monthly_reports();
        m_r.dispose();*/
    }//GEN-LAST:event_invoiceActionPerformed

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        // TODO add your handling code here:
        this.setVisible(true);
        home1 invoice=new home1();
        invoice.dispose();
        shortage s_p=new shortage();
        s_p.dispose();
        expiry exp=new expiry();
        exp.dispose();
        monthly_reports m_r=new monthly_reports();
        m_r.dispose();
    }//GEN-LAST:event_stockActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        
      try {
		Class.forName("com.mysql.jdbc.Driver");
		Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/project?autoReconnect=true&useSSL=false", "root", "root");
		System.out.println("Connected"); 
                Statement st=conn.createStatement();
                int s_no=1;
                TableModel model1=stock_show.getModel();
                int index[] = stock_show.getSelectedRows();
                Object [] row= new Object[5];
                String s;
                DefaultTableModel model=(DefaultTableModel)stock_show.getModel();
                stock frame=new stock();
                String message="Are you sure you want to DELETE";
                int ans=JOptionPane.showConfirmDialog(frame, message);
                if(ans==JOptionPane.YES_OPTION){
                for(int i=0;i<index.length;i++){
                        row[1]=model1.getValueAt(index[i], 1);
                        s=(String)row[1];
                        String query1="delete from stock_detail where pname='"+s+"'";
                        PreparedStatement preparedStmt = conn.prepareStatement(query1);
                        preparedStmt.execute();
                        model.removeRow(index[i]);
                    }
        }
        
                int length=model.getRowCount();
                for(int y=0 ;y<length;y++){
                    model.setValueAt(s_no, y, 0); //setValueAt(data,row,column)
                    s_no++;
                }
                stock_enter.revalidate();
                stock_enter.repaint();
                conn.close();
                    
	}catch(SQLException e){
             e.printStackTrace();
         }catch(Exception e1){
            System.out.println("error");
             e1.printStackTrace();
          }
        
        
        
       
    }//GEN-LAST:event_deleteActionPerformed

    private void shortageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shortageActionPerformed
        // TODO add your handling code here:
        shortage product=new shortage();
        product.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_shortageActionPerformed

    private void e_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_dateActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
     
        try {
		Class.forName("com.mysql.jdbc.Driver");
		Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/project?autoReconnect=true&useSSL=false", "root", "root");
		System.out.println("Connected connected");  
                TableModel model=stock_enter.getModel();    
                Object o_pn=model.getValueAt(0, 1);
                Object o_q=model.getValueAt(0, 2);
                Object o_up=model.getValueAt(0, 3);
                Object o_t=model.getValueAt(0, 5);
                String pn=(String)o_pn;
                //System.out.println(pn);
                String sn=sname.getText();
                int q;
                if(o_q instanceof Number)
                    q=(int)o_q;
                else
                    q=Integer.parseInt((String)o_q);
                int up;
                if(o_up instanceof Number)
                    up=(int)o_up;
                else
                    up=Integer.parseInt((String)o_up);
                int t;
                if(o_t instanceof Number)
                    t=q*up;
                else
                   t=Integer.parseInt((String)o_t);
               
          
                String query2="update stock_detail set pname='"+pn+"',quantity='"+q+"',uprice='"+up+"',total='"+t+"',sname='"+sn+"' where sno='"+barcode+"'";
                 PreparedStatement preparedStmt = conn.prepareStatement(query2);
                 preparedStmt.executeUpdate();
                
                 conn.close();
                    
	}catch(SQLException e){
             e.printStackTrace();
         }catch(Exception e1){
            System.out.println("error");
             e1.printStackTrace();
          }
        removeTable();
        sname.setText("");
      
    }//GEN-LAST:event_updateActionPerformed

    private void expiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expiryActionPerformed
        // TODO add your handling code here:
         expiry exp=new expiry();
         exp.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_expiryActionPerformed

    private void monthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyActionPerformed
        // TODO add your handling code here:
         this.dispose();
         monthly_reports m_r=new monthly_reports();
         m_r.setVisible(true);
    }//GEN-LAST:event_monthlyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton add_stock;
    private javax.swing.JButton delete;
    private javax.swing.JTextField e_date;
    private javax.swing.JButton edit;
    private javax.swing.JButton expiry;
    private javax.swing.JButton invoice;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JButton monthly;
    private javax.swing.JTextField pname;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton remove;
    private javax.swing.JTextField sdate;
    private javax.swing.JButton shortage;
    private javax.swing.JTextField sname;
    private javax.swing.JButton stock;
    private javax.swing.JTable stock_enter;
    private javax.swing.JTable stock_show;
    private javax.swing.JButton update;
    private javax.swing.JTextField uprice;
    // End of variables declaration//GEN-END:variables
}
